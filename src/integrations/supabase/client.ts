
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://vybexqzdfaddjzelnase.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZ5YmV4cXpkZmFkZGp6ZWxuYXNlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDMyNTUzMzAsImV4cCI6MjA1ODgzMTMzMH0.1IgMobQTaSQ0bUWcDAtvWEe5RC72Nvg2brAY0eRJG6A";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: localStorage,
    flowType: 'pkce' // Use PKCE flow for more security
  }
});

// Create a subscription client that listens for real-time updates
export const subscribeToPaymentUpdates = (userId: string, callback: () => void) => {
  return supabase
    .channel('payment-updates')
    .on(
      'postgres_changes',
      {
        event: 'UPDATE',
        schema: 'public',
        table: 'subscriptions',
        filter: `user_id=eq.${userId}`
      },
      callback
    )
    .subscribe();
};
